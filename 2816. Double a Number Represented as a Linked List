/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* doubleIt(struct ListNode* head){
        int rev[10001],k=0,num[10001],t = 0,r = 0;
        struct ListNode *temp = head,*q=NULL,*curr=NULL;
        while(temp!=NULL){
            num[k++] = temp->val;
            temp = temp->next;
        }
        temp = head;
        int carry = 0;
        for(int i=k-1;i>=0;i--){
            rev[t++] = ((num[i]*2)+carry)%10;
            carry = ((num[i]*2)+carry)/10;
        }
        if(carry>0){
            rev[t++] =carry;
        }
        for(int i=t-1;i>=0;i--){
            struct ListNode *newnode = (struct ListNode*)malloc(sizeof(struct ListNode));
            newnode->val = rev[i];
            if(q == NULL){
                q = curr = newnode;
            }
            else{
                curr->next = newnode;
                curr = newnode;
            }
            curr->next=NULL;
        }
        return q;
}
