/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* q1=l1;
    struct ListNode* q2=l2;
    int c1=0,c2=0,a[101],k=0;;
    while(q1!=NULL){
        c1++;
        q1 = q1->next;
    }
    while(q2!=NULL){
        c2++;
        q2 = q2->next;
    }
    q1 = l1;
    q2 = l2;
    if(c1<=c2){
        int carry = 0;
        while(q1!=NULL){
            int m = q1->val+q2->val;
            a[k++] = (m+carry)%10;
            carry = (m+carry)/10;
            q1 = q1->next;
            q2 = q2->next;
        }
        while(q2!=NULL){
            int m = q2->val+carry;
            a[k++] = m%10;
            carry = m/10;
            q2 = q2->next;
        }
        if(carry>0){
            a[k++] = carry%10;
            carry/=10;
        }
    }
    else{
        int carry = 0;
        while(q2!=NULL){
            int m = q1->val+q2->val;
            a[k++] = (m+carry)%10;
            carry = (m+carry)/10;
            q1 = q1->next;
            q2 = q2->next;
        }
        while(q1!=NULL){
            int m = q1->val+carry;
            a[k++] = m%10;
            carry = m/10;
            q1 = q1->next;
        }
        if(carry>0){
            a[k++] = carry%10;
            carry/=10;
        }
    }
    struct ListNode *head = NULL, *curr = NULL;
    for(int i=0;i<k;i++){
        struct ListNode *t = (struct ListNode*)malloc(sizeof(struct ListNode));
        t->val = a[i];
        if(head == NULL){
            head = t;
            curr = t;
        }
        else{
            curr->next = t;
            curr = t;
        }
        t->next = NULL;
    }
    if(k==0){
        struct ListNode *t = (struct ListNode*)malloc(sizeof(struct ListNode));
        t->val = 0;
        t->next = NULL;
        return t;
    }
    return head;
}
